# Generated by Django 4.2.2 on 2023-06-05 15:25

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('first_name', models.CharField(help_text='Enter the first name', max_length=50)),
                ('last_name', models.CharField(blank=True, help_text='Enter the last name', max_length=50, null=True)),
                ('email', models.EmailField(help_text='Enter the email address', max_length=254, unique=True)),
                ('phone', models.CharField(blank=True, help_text='Enter the phone number', max_length=15, null=True)),
                ('dob', models.DateField(blank=True, help_text='Enter the date of birth', null=True)),
                ('gender', models.CharField(choices=[('m', 'Male'), ('f', 'Female'), ('o', 'Other')], help_text='Select the gender', max_length=1)),
                ('address', models.TextField(blank=True, help_text='Enter the address', null=True)),
                ('role_type', models.CharField(choices=[('super_admin', 'Super Admin'), ('artist_manager', 'Artist Manager'), ('artist', 'Artist')], help_text='Select the role type', max_length=14)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'db_table': 'user',
            },
        ),
    ]
